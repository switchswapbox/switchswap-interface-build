{"version":3,"sources":["components/Page.js","utils/formatNumber.js","components/Label.js","utils/fakeRequest.js","components/_dashboard/nft-galery/galery3/ShopTagFiltered.js","components/_dashboard/nft-galery/galery3/ShopProductCard.js","components/_dashboard/nft-galery/galery3/ShopProductList.js","pages/PageThree.js"],"names":["Page","forwardRef","ref","children","title","other","propTypes","PropTypes","node","isRequired","string","fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fData","RootStyle","styled","theme","styleProps","isLight","palette","mode","color","variant","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","Label","fakeRequest","time","Promise","res","setTimeout","flexGrow","flexWrap","overflow","margin","shape","divider","props","Typography","component","background","neutral","borderRight","top","width","objectFit","position","BookingItem","product","name","cover","Paper","sx","bgcolor","Box","p","src","Stack","pt","pb","direction","Link","underline","noWrap","icon","Tooltip","href","target","rel","SkeletonLoad","Array","map","_","index","Grid","item","xs","sm","md","Skeleton","paddingTop","ProductList","products","isLoad","container","id","PageThree","themeStretch","useSettings","dispatch","useDispatch","useSelector","state","sortBy","filters","filteredProducts","orderBy","gender","length","filter","_product","includes","category","colors","some","priceRange","price","rating","value","totalRating","applyFilter","formik","useFormik","initialValues","onSubmit","values","a","setSubmitting","console","error","isSubmitting","isDefault","useEffect","getProducts","filterProducts","Backdrop","open","zIndex","CircularProgress","Container","maxWidth","gutterBottom"],"mappings":"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","file":"static/js/10.812dc892.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { forwardRef } from 'react';\r\n// material\r\nimport { Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\r\n  <Box ref={ref} {...other}>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n    </Helmet>\r\n    {children}\r\n  </Box>\r\n));\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import { replace } from 'lodash';\r\nimport numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fCurrency(number) {\r\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  return numeral(number / 100).format('0.0%');\r\n}\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  return replace(numeral(number).format('0.00a'), '.00', '');\r\n}\r\n\r\nexport function fData(number) {\r\n  return numeral(number).format('0.0 b');\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { alpha, styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('span')(({ theme, styleProps }) => {\r\n  const isLight = theme.palette.mode === 'light';\r\n  const { color, variant } = styleProps;\r\n\r\n  const styleFilled = (color) => ({\r\n    color: theme.palette[color].contrastText,\r\n    backgroundColor: theme.palette[color].main\r\n  });\r\n\r\n  const styleOutlined = (color) => ({\r\n    color: theme.palette[color].main,\r\n    backgroundColor: 'transparent',\r\n    border: `1px solid ${theme.palette[color].main}`\r\n  });\r\n\r\n  const styleGhost = (color) => ({\r\n    color: theme.palette[color][isLight ? 'dark' : 'light'],\r\n    backgroundColor: alpha(theme.palette[color].main, 0.16)\r\n  });\r\n\r\n  return {\r\n    height: 22,\r\n    minWidth: 22,\r\n    lineHeight: 0,\r\n    borderRadius: 8,\r\n    cursor: 'default',\r\n    alignItems: 'center',\r\n    whiteSpace: 'nowrap',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    color: theme.palette.grey[800],\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontFamily: theme.typography.fontFamily,\r\n    backgroundColor: theme.palette.grey[300],\r\n    fontWeight: theme.typography.fontWeightBold,\r\n\r\n    ...(color !== 'default'\r\n      ? {\r\n          ...(variant === 'filled' && { ...styleFilled(color) }),\r\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\r\n          ...(variant === 'ghost' && { ...styleGhost(color) })\r\n        }\r\n      : {\r\n          ...(variant === 'outlined' && {\r\n            backgroundColor: 'transparent',\r\n            color: theme.palette.text.primary,\r\n            border: `1px solid ${theme.palette.grey[500_32]}`\r\n          }),\r\n          ...(variant === 'ghost' && {\r\n            color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\r\n            backgroundColor: theme.palette.grey[500_16]\r\n          })\r\n        })\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\r\n  return (\r\n    <RootStyle styleProps={{ color, variant }} {...other}>\r\n      {children}\r\n    </RootStyle>\r\n  );\r\n}\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\r\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost'])\r\n};\r\n","// ----------------------------------------------------------------------\r\n\r\nexport default function fakeRequest(time) {\r\n  return new Promise((res) => setTimeout(res, time));\r\n}\r\n","import { filter } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { sentenceCase } from 'change-case';\r\nimport roundClearAll from '@iconify/icons-ic/round-clear-all';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Chip, Typography, Stack, Button } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')({\r\n  flexGrow: 1,\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center'\r\n});\r\n\r\nconst WrapperStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  alignItems: 'stretch',\r\n  margin: theme.spacing(0.5),\r\n  borderRadius: theme.shape.borderRadius,\r\n  border: `solid 1px ${theme.palette.divider}`\r\n}));\r\n\r\nconst LabelStyle = styled((props) => <Typography component=\"span\" variant=\"subtitle2\" {...props} />)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0, 1),\r\n  color: theme.palette.text.secondary,\r\n  backgroundColor: theme.palette.background.neutral,\r\n  borderRight: `solid 1px ${theme.palette.divider}`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction labelPriceRange(range) {\r\n  if (range === 'below') {\r\n    return 'Below $25';\r\n  }\r\n  if (range === 'between') {\r\n    return 'Between $25 - $75';\r\n  }\r\n  return 'Above $75';\r\n}\r\n\r\nShopTagFiltered.propTypes = {\r\n  formik: PropTypes.object,\r\n  filters: PropTypes.object,\r\n  isShowReset: PropTypes.bool,\r\n  isDefault: PropTypes.bool,\r\n  onResetFilter: PropTypes.func\r\n};\r\n\r\nexport default function ShopTagFiltered({ formik, filters, isShowReset, isDefault, onResetFilter }) {\r\n  const theme = useTheme();\r\n  const { values, handleSubmit, setFieldValue, initialValues } = formik;\r\n  const { gender, category, colors, priceRange, rating } = filters;\r\n  const isShow = values !== initialValues && !isShowReset;\r\n\r\n  const handleRemoveGender = (value) => {\r\n    const newValue = filter(gender, (_item) => _item !== value);\r\n    handleSubmit();\r\n    setFieldValue('gender', newValue);\r\n  };\r\n\r\n  const handleRemoveCategory = () => {\r\n    handleSubmit();\r\n    setFieldValue('category', 'All');\r\n  };\r\n\r\n  const handleRemoveColor = (value) => {\r\n    const newValue = filter(colors, (_item) => _item !== value);\r\n    handleSubmit();\r\n    setFieldValue('colors', newValue);\r\n  };\r\n\r\n  const handleRemovePrice = () => {\r\n    handleSubmit();\r\n    setFieldValue('priceRange', '');\r\n  };\r\n\r\n  const handleRemoveRating = () => {\r\n    handleSubmit();\r\n    setFieldValue('rating', '');\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      {gender.length > 0 && (\r\n        <WrapperStyle>\r\n          <LabelStyle>Gender:</LabelStyle>\r\n          <Stack direction=\"row\" flexWrap=\"wrap\" sx={{ p: 0.75 }}>\r\n            {gender.map((_gender) => (\r\n              <Chip\r\n                key={_gender}\r\n                label={_gender}\r\n                size=\"small\"\r\n                onDelete={() => handleRemoveGender(_gender)}\r\n                sx={{ m: 0.5 }}\r\n              />\r\n            ))}\r\n          </Stack>\r\n        </WrapperStyle>\r\n      )}\r\n\r\n      {category !== 'All' && (\r\n        <WrapperStyle>\r\n          <LabelStyle>Category:</LabelStyle>\r\n          <Stack direction=\"row\" flexWrap=\"wrap\" sx={{ p: 0.75 }}>\r\n            <Chip size=\"small\" label={category} onDelete={handleRemoveCategory} sx={{ m: 0.5 }} />\r\n          </Stack>\r\n        </WrapperStyle>\r\n      )}\r\n\r\n      {colors.length > 0 && (\r\n        <WrapperStyle>\r\n          <LabelStyle>Colors:</LabelStyle>\r\n          <Stack direction=\"row\" flexWrap=\"wrap\" sx={{ p: 0.75 }}>\r\n            {colors.map((color) => (\r\n              <Chip\r\n                key={color}\r\n                label=\"New\"\r\n                size=\"small\"\r\n                onDelete={() => handleRemoveColor(color)}\r\n                sx={{\r\n                  m: 0.5,\r\n                  bgcolor: color,\r\n                  color: theme.palette.getContrastText(color),\r\n                  ...((color === '#FFFFFF' || color === '#000000') && {\r\n                    border: `solid 1px ${theme.palette.grey[500_32]}`,\r\n                    '& .MuiChip-deleteIcon': {\r\n                      color: 'text.disabled'\r\n                    }\r\n                  })\r\n                }}\r\n              />\r\n            ))}\r\n          </Stack>\r\n        </WrapperStyle>\r\n      )}\r\n\r\n      {priceRange && (\r\n        <WrapperStyle>\r\n          <LabelStyle>Price:</LabelStyle>\r\n          <Stack direction=\"row\" flexWrap=\"wrap\" sx={{ p: 0.75 }}>\r\n            <Chip size=\"small\" label={labelPriceRange(priceRange)} onDelete={handleRemovePrice} sx={{ m: 0.5 }} />\r\n          </Stack>\r\n        </WrapperStyle>\r\n      )}\r\n\r\n      {rating && (\r\n        <WrapperStyle>\r\n          <LabelStyle>Rating:</LabelStyle>\r\n          <Stack direction=\"row\" flexWrap=\"wrap\" sx={{ p: 0.75 }}>\r\n            <Chip size=\"small\" label={sentenceCase(rating)} onDelete={handleRemoveRating} sx={{ m: 0.5 }} />\r\n          </Stack>\r\n        </WrapperStyle>\r\n      )}\r\n\r\n      {isShow && !isDefault && (\r\n        <Button\r\n          color=\"error\"\r\n          size=\"small\"\r\n          type=\"button\"\r\n          onClick={onResetFilter}\r\n          startIcon={<Icon icon={roundClearAll} />}\r\n        >\r\n          Clear All\r\n        </Button>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\n\r\nimport { paramCase } from 'change-case';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { Box, Card, Link, Typography, Stack, Tooltip } from '@material-ui/core';\r\nimport { styled } from '@material-ui/core/styles';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\r\n// utils\r\nimport { fCurrency } from '../../../../utils/formatNumber';\r\n//\r\nimport Label from '../../../Label';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ProductImgStyle = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute'\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nShopProductCard.propTypes = {\r\n  product: PropTypes.object\r\n};\r\n\r\nexport default function ShopProductCard({ product }) {\r\n  const { name, cover, price, status, priceSale } = product;\r\n  const linkTo = `${PATH_DASHBOARD.dapp.nftgalleryone}/product/${paramCase(name)}`;\r\n\r\n  return (\r\n    <Card>\r\n      <Box sx={{ pt: '50%', position: 'relative' }}>\r\n        {status && (\r\n          <Label\r\n            variant=\"filled\"\r\n            color={(status === 'sale' && 'error') || 'info'}\r\n            sx={{\r\n              top: 16,\r\n              right: 16,\r\n              zIndex: 9,\r\n              position: 'absolute',\r\n              textTransform: 'uppercase'\r\n            }}\r\n          >\r\n            {status}\r\n          </Label>\r\n        )}\r\n        <ProductImgStyle alt={name} src={cover} />\r\n      </Box>\r\n\r\n      <Stack spacing={1} sx={{ p: 2, pt: 1, pb: 1 }}>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Link to={linkTo} color=\"inherit\" component={RouterLink} underline=\"none\">\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {name}\r\n            </Typography>\r\n          </Link>\r\n          <Stack spacing={0}>\r\n            <Typography variant=\"caption\" noWrap>\r\n              Price\r\n            </Typography>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n              <Icon icon=\"logos:ethereum\" width={16} height={16} />\r\n              <Typography variant=\"subtitle2\" noWrap>\r\n                0.01\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Tooltip title=\"NFT Contract\">\r\n            <Link href=\"#\" underline=\"none\" target=\"_blank\" rel=\"noopener\">\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n                <Icon icon=\"teenyicons:contract-outline\" width={16} height={16} />\r\n                <Typography variant=\"body2\" noWrap>\r\n                  0xE53821\r\n                </Typography>\r\n              </Stack>\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip title=\"NFT ID\">\r\n            <Link href=\"#\" underline=\"none\" target=\"_blank\" rel=\"noopener\">\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n                <Icon icon=\"ant-design:number-outlined\" width={16} height={16} />\r\n                <Typography variant=\"body2\" noWrap>\r\n                  142\r\n                </Typography>\r\n              </Stack>\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip title=\"Author Address\">\r\n            <Link href=\"#\" underline=\"none\" target=\"_blank\" rel=\"noopener\">\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n                <Icon icon=\"bi:shield-check\" width={16} height={16} />\r\n                <Typography variant=\"body2\" noWrap>\r\n                  0x1432\r\n                </Typography>\r\n              </Stack>\r\n            </Link>\r\n          </Tooltip>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\n\r\n// material\r\nimport { Skeleton, Grid, Paper, Stack, Typography, Box, Tooltip, Link } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBookingItem.propTypes = {\r\n  product: PropTypes.object\r\n};\r\n\r\nfunction BookingItem({ product }) {\r\n  const { name, cover } = product;\r\n  return (\r\n    <Paper sx={{ borderRadius: 2, bgcolor: 'background.neutral' }}>\r\n      <Box sx={{ p: 1, position: 'relative' }}>\r\n        <Box\r\n          component=\"img\"\r\n          src={cover}\r\n          sx={{ borderRadius: 1.5, top: 0, width: '100%', height: '200px', objectFit: 'cover' }}\r\n        />\r\n      </Box>\r\n\r\n      <Stack spacing={1} sx={{ p: 2, pt: 1, pb: 1 }}>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Link color=\"inherit\" underline=\"none\">\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {name}\r\n            </Typography>\r\n          </Link>\r\n          <Stack spacing={0}>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n              <Icon icon=\"logos:ethereum\" width={16} height={16} />\r\n              <Typography variant=\"subtitle2\" noWrap>\r\n                0.01\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Tooltip title=\"NFT Contract\">\r\n            <Link href=\"#\" underline=\"none\" target=\"_blank\" rel=\"noopener\">\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n                <Icon icon=\"teenyicons:contract-outline\" width={16} height={16} />\r\n                <Typography variant=\"body2\" noWrap>\r\n                  0xE53821\r\n                </Typography>\r\n              </Stack>\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip title=\"NFT ID\">\r\n            <Link href=\"#\" underline=\"none\" target=\"_blank\" rel=\"noopener\">\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n                <Icon icon=\"ant-design:number-outlined\" width={16} height={16} />\r\n                <Typography variant=\"body2\" noWrap>\r\n                  142\r\n                </Typography>\r\n              </Stack>\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip title=\"Author Address\">\r\n            <Link href=\"#\" underline=\"none\" target=\"_blank\" rel=\"noopener\">\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n                <Icon icon=\"bi:shield-check\" width={16} height={16} />\r\n                <Typography variant=\"body2\" noWrap>\r\n                  0x1432\r\n                </Typography>\r\n              </Stack>\r\n            </Link>\r\n          </Tooltip>\r\n        </Stack>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst SkeletonLoad = (\r\n  <>\r\n    {[...Array(12)].map((_, index) => (\r\n      <Grid item xs={12} sm={6} md={3} key={index}>\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ paddingTop: '115%', borderRadius: 2 }} />\r\n      </Grid>\r\n    ))}\r\n  </>\r\n);\r\n\r\nProductList.propTypes = {\r\n  products: PropTypes.array.isRequired,\r\n  isLoad: PropTypes.bool\r\n};\r\n\r\nexport default function ProductList({ products, isLoad, ...other }) {\r\n  return (\r\n    <Grid container spacing={3} {...other}>\r\n      {products.map((product) => (\r\n        <Grid key={product.id} item xs={12} sm={6} md={4}>\r\n          <BookingItem product={product} />\r\n        </Grid>\r\n      ))}\r\n\r\n      {isLoad && SkeletonLoad}\r\n    </Grid>\r\n  );\r\n}\r\n","import { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport { filter, includes, orderBy } from 'lodash';\r\n// material\r\nimport { Backdrop, Container, Typography, CircularProgress, Stack } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../redux/store';\r\nimport { getProducts, filterProducts } from '../redux/slices/product';\r\n// routes\r\n// utils\r\nimport fakeRequest from '../utils/fakeRequest';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n// components\r\nimport Page from '../components/Page';\r\nimport { ShopProductSort, ShopProductList } from '../components/_dashboard/nft-galery/galery3';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter(products, sortBy, filters) {\r\n  // SORT BY\r\n  if (sortBy === 'featured') {\r\n    products = orderBy(products, ['sold'], ['desc']);\r\n  }\r\n  if (sortBy === 'newest') {\r\n    products = orderBy(products, ['createdAt'], ['desc']);\r\n  }\r\n  if (sortBy === 'priceDesc') {\r\n    products = orderBy(products, ['price'], ['desc']);\r\n  }\r\n  if (sortBy === 'priceAsc') {\r\n    products = orderBy(products, ['price'], ['asc']);\r\n  }\r\n  // FILTER PRODUCTS\r\n  if (filters.gender.length > 0) {\r\n    products = filter(products, (_product) => includes(filters.gender, _product.gender));\r\n  }\r\n  if (filters.category !== 'All') {\r\n    products = filter(products, (_product) => _product.category === filters.category);\r\n  }\r\n  if (filters.colors.length > 0) {\r\n    products = filter(products, (_product) => _product.colors.some((color) => filters.colors.includes(color)));\r\n  }\r\n  if (filters.priceRange) {\r\n    products = filter(products, (_product) => {\r\n      if (filters.priceRange === 'below') {\r\n        return _product.price < 25;\r\n      }\r\n      if (filters.priceRange === 'between') {\r\n        return _product.price >= 25 && _product.price <= 75;\r\n      }\r\n      return _product.price > 75;\r\n    });\r\n  }\r\n  if (filters.rating) {\r\n    products = filter(products, (_product) => {\r\n      const convertRating = (value) => {\r\n        if (value === 'up4Star') return 4;\r\n        if (value === 'up3Star') return 3;\r\n        if (value === 'up2Star') return 2;\r\n        return 1;\r\n      };\r\n      return _product.totalRating > convertRating(filters.rating);\r\n    });\r\n  }\r\n  return products;\r\n}\r\n\r\nexport default function PageThree() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  const { products, sortBy, filters } = useSelector((state) => state.product);\r\n  const filteredProducts = applyFilter(products, sortBy, filters);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      gender: filters.gender,\r\n      category: filters.category,\r\n      colors: filters.colors,\r\n      priceRange: filters.priceRange,\r\n      rating: filters.rating\r\n    },\r\n    onSubmit: async (values, { setSubmitting }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n        setSubmitting(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { values, isSubmitting, initialValues } = formik;\r\n\r\n  const isDefault =\r\n    !values.priceRange &&\r\n    !values.rating &&\r\n    values.gender.length === 0 &&\r\n    values.colors.length === 0 &&\r\n    values.category === 'All';\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(filterProducts(values));\r\n  }, [dispatch, values]);\r\n\r\n  return (\r\n    <Page title=\"NFT Galery\">\r\n      {values && (\r\n        <Backdrop open={isSubmitting} sx={{ zIndex: 9999 }}>\r\n          <CircularProgress />\r\n        </Backdrop>\r\n      )}\r\n\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        {!isDefault && (\r\n          <Typography gutterBottom>\r\n            <Typography component=\"span\" variant=\"subtitle1\">\r\n              {filteredProducts.length}\r\n            </Typography>\r\n            &nbsp;Products found\r\n          </Typography>\r\n        )}\r\n\r\n        <ShopProductList products={filteredProducts} isLoad={!filteredProducts && !initialValues} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}