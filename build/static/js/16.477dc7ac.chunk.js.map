{"version":3,"sources":["pages/Universe.tsx","components/Page.tsx","utils/contractAddress.ts","utils/abi.ts","utils/gallery/ipfsUriToCid.ts","components/_dashboard/gallery/NftCard.tsx","utils/gallery/updateGallery.ts"],"names":["Universe","theme","useTheme","pageUrl","useParams","navigate","useNavigate","themeStretch","useSettings","useState","NftList","setNftList","parseInt","page","setPage","pageCount","setPageCount","loading","setLoading","useEffect","a","provider","ethers","providers","JsonRpcProvider","contract","Contract","contractAddress","ABI","totalSupply","NftBalance","toString","Math","ceil","NUMBER_OF_NFT_IN_MANAGER_PAGE","getPageCount","getNftByPage","useMeasure","ref","width","lgCol","setLgCol","breakpoints","values","lg","title","maxWidth","container","spacing","direction","alignItems","justifyContent","sx","display","mt","color","map","nft","item","xs","sm","md","nftContract","tokenId","pt","count","onChange","event","value","Page","forwardRef","children","other","inputs","stateMutability","type","anonymous","indexed","internalType","name","outputs","ipfsUriToCid","ipfsUrl","CidSearch","match","NftCard","imageUrl","elevation","borderRadius","bgcolor","transition","transform","p","position","height","href","component","src","onLoad","top","objectFit","pb","underline","variant","noWrap","icon","pl","target","rel","updateListByTokenIndex","index","tokenByIndex","tokenURI","tokenURICid","tokenURIHttp","IPFS_GATEWAY_FOR_FETCHING_DATA","axios","get","then","response","data","owner","ownerOf","image","imageCid","addingNftIndex","nftIndex","length","slice","startIndex","stopIndex","updateListByTokenIndexManager","selectedMetamaskAccount","tokenOfOwnerByIndex","getNftByPageManager","utils","isAddress","balanceOf"],"mappings":"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","file":"static/js/16.477dc7ac.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Container, Stack, Grid, Pagination } from '@mui/material';\r\nimport useSettings from '../hooks/useSettings';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { LineScalePulseOutRapid } from 'react-pure-loaders';\r\nimport Page from '../components/Page';\r\nimport { contractAddress } from 'utils/contractAddress';\r\nimport { ethers } from 'ethers';\r\nimport { ABI } from 'utils/abi';\r\nimport { NUMBER_OF_NFT_IN_MANAGER_PAGE } from 'assets/COMMON_VARIABLES';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useMeasure } from 'react-use';\r\nimport { GridSize } from '@mui/material/Grid';\r\nimport { useParams } from 'react-router-dom';\r\nimport NftCard from '../components/_dashboard/gallery/NftCard';\r\nimport { getNftByPage } from 'utils/gallery/updateGallery';\r\n\r\nexport default function Universe() {\r\n  const theme = useTheme();\r\n  const { pageUrl } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const { themeStretch } = useSettings();\r\n  const [NftList, setNftList] = useState<\r\n    { tokenId: string; tokenURI: string; imageUrl: string; name: string; owner?: string }[]\r\n  >([]);\r\n\r\n  const [page, setPage] = useState(parseInt(pageUrl || '0'));\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handlePageChange = (event: any, value: number) => {\r\n    if (value) {\r\n      setLoading(true);\r\n      setPage(value);\r\n      navigate(`/gallery/universe/${value}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getPageCount() {\r\n      const provider = new ethers.providers.JsonRpcProvider('https://polygon-rpc.com/');\r\n      const contract = new ethers.Contract(contractAddress, ABI, provider);\r\n\r\n      const NftBalance = (await contract.totalSupply()).toString();\r\n\r\n      setPageCount(Math.ceil(parseInt(NftBalance, 10) / NUMBER_OF_NFT_IN_MANAGER_PAGE));\r\n    }\r\n\r\n    getPageCount();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getNftByPage(page, setLoading, setNftList);\r\n  }, [page]);\r\n\r\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\r\n  const [lgCol, setLgCol] = useState<GridSize>(4);\r\n\r\n  useEffect(() => {\r\n    if (width > theme.breakpoints.values.lg) {\r\n      setLgCol(3);\r\n    } else {\r\n      setLgCol(4);\r\n    }\r\n  }, [width]);\r\n\r\n  return (\r\n    <Page title=\"Univere Gallery\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <Grid container spacing={3} ref={ref}>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            sx={{ width: '100%', display: loading ? 'flex' : 'none', mt: 5 }}\r\n          >\r\n            <LineScalePulseOutRapid color={'#637381'} loading={loading} />\r\n          </Stack>\r\n          {NftList.map((nft) => {\r\n            return (\r\n              <Grid key={nft.tokenId} item xs={12} sm={6} md={4} lg={lgCol}>\r\n                <NftCard {...nft} nftContract={contractAddress} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Stack direction=\"row\" justifyContent=\"center\" sx={{ pt: 6 }}>\r\n          <Pagination count={pageCount} page={page} onChange={handlePageChange} />\r\n        </Stack>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { forwardRef, ReactNode } from 'react';\r\n// material\r\nimport { Box, BoxProps } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ninterface PageProps extends BoxProps {\r\n  children: ReactNode;\r\n  title?: string;\r\n}\r\n\r\nconst Page = forwardRef<HTMLDivElement, PageProps>(({ children, title = '', ...other }, ref) => (\r\n  <Box ref={ref} {...other}>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n    </Helmet>\r\n    {children}\r\n  </Box>\r\n));\r\n\r\nexport default Page;\r\n","export const contractAddress: string = '0xa0Afb3513B99E1b099CE9F3C007eE937B04e7870';\r\n","export const ABI: any = [\r\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'approved',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'operator',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bool',\r\n        name: 'approved',\r\n        type: 'bool'\r\n      }\r\n    ],\r\n    name: 'ApprovalForAll',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'approve',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],\r\n    name: 'balanceOf',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getApproved',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getDataIdOnchain',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getDataRegisterProof',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'owner', type: 'address' },\r\n      { internalType: 'address', name: 'operator', type: 'address' }\r\n    ],\r\n    name: 'isApprovedForAll',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'receiver', type: 'address' },\r\n      { internalType: 'string', name: 'tokenURIdata', type: 'string' },\r\n      { internalType: 'string', name: 'dataIdOnchain', type: 'string' },\r\n      { internalType: 'string', name: 'dataRegisterProof', type: 'string' }\r\n    ],\r\n    name: 'mintDataNTF',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'ownerOf',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_data', type: 'bytes' }\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'operator', type: 'address' },\r\n      { internalType: 'bool', name: 'approved', type: 'bool' }\r\n    ],\r\n    name: 'setApprovalForAll',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],\r\n    name: 'supportsInterface',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],\r\n    name: 'tokenByIndex',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'owner', type: 'address' },\r\n      { internalType: 'uint256', name: 'index', type: 'uint256' }\r\n    ],\r\n    name: 'tokenOfOwnerByIndex',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'tokenURI',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  }\r\n];\r\n","export const ipfsUriToCid = (ipfsUrl: string) => {\r\n  const CidSearch = ipfsUrl.match(/(Qm[\\w]+)/);\r\n  if (CidSearch) {\r\n    return CidSearch[1];\r\n  } else return null;\r\n};\r\n","import { useState } from 'react';\r\nimport { Typography, Box, Tooltip, Paper, Stack, Link } from '@mui/material';\r\nimport { BallClipRotateMultiple } from 'react-pure-loaders';\r\nimport { Icon } from '@iconify/react';\r\nimport { contractAddress } from 'utils/contractAddress';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\ntype NftCardProps = {\r\n  tokenId: string;\r\n  tokenURI: string;\r\n  imageUrl: string;\r\n  name: string;\r\n  nftContract: string;\r\n  owner?: string;\r\n};\r\n\r\nexport default function NftCard({ tokenId, imageUrl, name, nftContract }: NftCardProps) {\r\n  const theme = useTheme();\r\n  const [loading, setLoading] = useState(true);\r\n  return (\r\n    <Paper\r\n      elevation={2}\r\n      sx={{\r\n        borderRadius: 2,\r\n        bgcolor: 'white',\r\n        transition: 'all .2s ease-in-out',\r\n        '&:hover': {\r\n          transform: `translateY(-${theme.spacing(1 / 4)})`\r\n        }\r\n      }}\r\n    >\r\n      <Box sx={{ p: 1, position: 'relative' }}>\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          sx={{ height: '200px', display: loading ? 'flex' : 'none' }}\r\n        >\r\n          <BallClipRotateMultiple color={'#637381'} loading={loading} />\r\n        </Stack>\r\n        <Link href={`#/assets/polygon/${contractAddress}/${tokenId}`}>\r\n          <Box\r\n            component=\"img\"\r\n            src={imageUrl}\r\n            onLoad={() => setLoading(false)}\r\n            sx={{\r\n              borderRadius: 1.5,\r\n              top: 0,\r\n              width: '100%',\r\n              height: '200px',\r\n              objectFit: 'cover',\r\n              display: loading ? 'none' : 'block'\r\n            }}\r\n          />\r\n        </Link>\r\n      </Box>\r\n\r\n      <Stack spacing={1} sx={{ p: 2, pt: 1, pb: 1 }}>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Link\r\n            color=\"inherit\"\r\n            underline=\"none\"\r\n            sx={{ width: '100%' }}\r\n            href={`#/assets/polygon/${contractAddress}/${tokenId}`}\r\n          >\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {name}\r\n            </Typography>\r\n          </Link>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Stack sx={{ width: '30%' }} direction=\"row\" alignItems=\"center\">\r\n            <Icon icon=\"teenyicons:contract-outline\" width={16} height={16} />\r\n            <Tooltip title=\"NFT Contract\" sx={{ width: '80%', pl: 0.5 }}>\r\n              <Link\r\n                href={`https://polygonscan.com/address/${nftContract}`}\r\n                underline=\"none\"\r\n                target=\"_blank\"\r\n                rel=\"noopener\"\r\n              >\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n                  <Typography variant=\"body2\" noWrap>\r\n                    {nftContract}\r\n                  </Typography>\r\n                </Stack>\r\n              </Link>\r\n            </Tooltip>\r\n          </Stack>\r\n          <Tooltip title=\"NFT ID\">\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n              <Icon icon=\"ant-design:number-outlined\" width={16} height={16} />\r\n              <Typography variant=\"body2\" noWrap>\r\n                {tokenId}\r\n              </Typography>\r\n            </Stack>\r\n          </Tooltip>\r\n          <Link\r\n            href={`https://polygonscan.com/token/${nftContract}?a=${tokenId}`}\r\n            underline=\"none\"\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n          >\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n              <Icon icon=\"bi:shield-check\" width={16} height={16} />\r\n              <Typography variant=\"body2\" noWrap>\r\n                History\r\n              </Typography>\r\n            </Stack>\r\n          </Link>\r\n        </Stack>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { ethers } from 'ethers';\r\nimport { ipfsUriToCid } from './ipfsUriToCid';\r\nimport {\r\n  IPFS_GATEWAY_FOR_FETCHING_DATA,\r\n  NUMBER_OF_NFT_IN_MANAGER_PAGE\r\n} from 'assets/COMMON_VARIABLES';\r\nimport { contractAddress } from 'utils/contractAddress';\r\nimport { ABI } from 'utils/abi';\r\n\r\ntype setNftListType = React.Dispatch<\r\n  React.SetStateAction<\r\n    {\r\n      tokenId: string;\r\n      tokenURI: string;\r\n      imageUrl: string;\r\n      name: string;\r\n      owner?: string;\r\n    }[]\r\n  >\r\n>;\r\n\r\ntype setLoadingType = React.Dispatch<React.SetStateAction<boolean>>;\r\n\r\nexport const updateListByTokenIndex = async (\r\n  index: number,\r\n  contract: ethers.Contract,\r\n  setLoading: setLoadingType,\r\n  setNftList: setNftListType\r\n) => {\r\n  const tokenId = (await contract.tokenByIndex(index)).toString();\r\n  const tokenURI = await contract.tokenURI(tokenId);\r\n  const tokenURICid = ipfsUriToCid(tokenURI);\r\n  if (tokenURICid) {\r\n    const tokenURIHttp = `${IPFS_GATEWAY_FOR_FETCHING_DATA[0]}/${tokenURICid}`;\r\n    axios.get(tokenURIHttp).then((response) => {\r\n      const name = response.data.name || '';\r\n      const owner = contract.ownerOf(tokenId);\r\n      if (response.data && response.data.image) {\r\n        const imageCid = ipfsUriToCid(response.data.image);\r\n        if (imageCid) {\r\n          const imageUrl = `${IPFS_GATEWAY_FOR_FETCHING_DATA[0]}/${imageCid}`;\r\n          setLoading(false);\r\n          setNftList((NftList) => {\r\n            let addingNftIndex = 0;\r\n            for (let nftIndex = 0; nftIndex < NftList.length; nftIndex++) {\r\n              if (parseInt(tokenId, 10) > parseInt(NftList[nftIndex].tokenId, 10)) {\r\n                break;\r\n              }\r\n              addingNftIndex++;\r\n            }\r\n            const newNftList = [\r\n              ...NftList.slice(0, addingNftIndex),\r\n              { tokenId, tokenURI, imageUrl, name, owner },\r\n              ...NftList.slice(addingNftIndex)\r\n            ];\r\n            return newNftList;\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const getNftByPage = async (\r\n  page: number,\r\n  setLoading: setLoadingType,\r\n  setNftList: setNftListType\r\n) => {\r\n  setNftList([]);\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider('https://polygon-rpc.com/');\r\n  const contract = new ethers.Contract(contractAddress, ABI, provider);\r\n\r\n  const totalSupply = (await contract.totalSupply()).toString();\r\n\r\n  const startIndex = totalSupply - 1 - (page - 1) * NUMBER_OF_NFT_IN_MANAGER_PAGE;\r\n  const stopIndex =\r\n    startIndex - NUMBER_OF_NFT_IN_MANAGER_PAGE > -1\r\n      ? startIndex - NUMBER_OF_NFT_IN_MANAGER_PAGE\r\n      : -1;\r\n\r\n  for (let index = startIndex; index > stopIndex; index--) {\r\n    updateListByTokenIndex(index, contract, setLoading, setNftList);\r\n  }\r\n};\r\n\r\nexport const updateListByTokenIndexManager = async (\r\n  index: number,\r\n  contract: ethers.Contract,\r\n  selectedMetamaskAccount: string,\r\n  setLoading: setLoadingType,\r\n  setNftList: setNftListType\r\n) => {\r\n  const tokenId = (await contract.tokenOfOwnerByIndex(selectedMetamaskAccount, index)).toString();\r\n  const tokenURI = await contract.tokenURI(tokenId);\r\n  const tokenURICid = ipfsUriToCid(tokenURI);\r\n  if (tokenURICid) {\r\n    const tokenURIHttp = `${IPFS_GATEWAY_FOR_FETCHING_DATA[0]}/${tokenURICid}`;\r\n    axios.get(tokenURIHttp).then((response) => {\r\n      const name = response.data.name || '';\r\n      if (response.data && response.data.image) {\r\n        const imageCid = ipfsUriToCid(response.data.image);\r\n        if (imageCid) {\r\n          const imageUrl = `${IPFS_GATEWAY_FOR_FETCHING_DATA[0]}/${imageCid}`;\r\n          setLoading(false);\r\n          setNftList((NftList) => {\r\n            let addingNftIndex = NftList.length;\r\n            for (let nftIndex = NftList.length; nftIndex > 0; nftIndex--) {\r\n              if (parseInt(tokenId, 10) > parseInt(NftList[nftIndex - 1].tokenId, 10)) {\r\n                break;\r\n              }\r\n              addingNftIndex--;\r\n            }\r\n            const newNftList = [\r\n              ...NftList.slice(0, addingNftIndex),\r\n              { tokenId, tokenURI, imageUrl, name },\r\n              ...NftList.slice(addingNftIndex)\r\n            ];\r\n            return newNftList;\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const getNftByPageManager = async (\r\n  page: number,\r\n  selectedMetamaskAccount: string,\r\n  setLoading: setLoadingType,\r\n  setNftList: setNftListType\r\n) => {\r\n  if (ethers.utils.isAddress(selectedMetamaskAccount)) {\r\n    setNftList([]);\r\n\r\n    const provider = new ethers.providers.JsonRpcProvider('https://polygon-rpc.com/');\r\n    const contract = new ethers.Contract(contractAddress, ABI, provider);\r\n\r\n    const NftBalance = (await contract.balanceOf(selectedMetamaskAccount)).toString();\r\n\r\n    const stopIndex =\r\n      NUMBER_OF_NFT_IN_MANAGER_PAGE * page > parseInt(NftBalance, 10)\r\n        ? parseInt(NftBalance, 10)\r\n        : NUMBER_OF_NFT_IN_MANAGER_PAGE * page;\r\n\r\n    for (let index = NUMBER_OF_NFT_IN_MANAGER_PAGE * (page - 1); index < stopIndex; index++) {\r\n      updateListByTokenIndexManager(\r\n        index,\r\n        contract,\r\n        selectedMetamaskAccount,\r\n        setLoading,\r\n        setNftList\r\n      );\r\n    }\r\n  }\r\n};\r\n"],"sourceRoot":""}